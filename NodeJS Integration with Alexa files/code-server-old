const https = require('https');
const express = require('express');
const bodyParser = require('body-parser')
var app = new express();
app.use(bodyParser.json());

//    Variables Declaration
var payload;
var output;
var whResponse = {};
var replies = [];
var repliesContent = {};
var entity;
var options = {
    host: 'api10.successfactors.com',
    port: 443,
    path: '',
    headers: {
        //Authorization: 'Basic U0ZBRE1JTkBpbmZvc3lzbGltRDpJbmZvc3lzMTIz'
        Authorization: 'Basic QVBJVVNFUkBpbmZvc3lzbGltRDpUcmlkZW50QDE=' //APIUSER@infosyslimD
    }
};

//var url = 'https://api10.successfactors.com/odata/v2/EmpTimeAccountBalance?$filter=userId%20eq%20%2710010%27%20and%20timeAccountType%20eq%20%27US_TA_SickLeave%27&$format=json';

app.use('/', function(request, response) {
    var slbalance;
    var vlbalance;
    replies = [];
    repliesContent.type = 'text';
    payload = request.body;
    
    //console.log(request);
    console.log(payload.nlp.entities.sickleave)
    //console.log(payload.memory);
    
    console.log('printing entities');
    
    for(var a in payload.nlp.entities)
    {
        if(a==='sickleave'||a==='vacationleave' || a === 'totalleave' || a === 'myleaves')
            break;
    }
    
    if (a === 'sickleave') {
        options.path = '/odata/v2/EmpTimeAccountBalance?$filter=userId%20eq%20%2710010%27%20and%20timeAccountType%20eq%20%27US_TA_SickLeave%27&$format=json';
        https.get(options, (res) => {
            var result;
            //console.log('inside sick leave 12');
            res.on('data', (chunk) => {
                if (result !== undefined) {
                    result += chunk.toString();
                } else {
                    result = chunk.toString();
                }
            });
            res.on('end', () => {
                console.log('inside sick leave 2');
                output = JSON.parse(result).d.results[0].balance;
                console.log(output);
                repliesContent.content = "Your Sick Leave balance is " + output;
                replies.push(repliesContent);
                whResponse.replies = replies;
                response.send(whResponse);
            });

            res.on('error', (e) => {
                console.error(e);
                output = e.message;
                repliesContent.content = "Error: " + output;
                replies.push(repliesContent);
                whResponse.replies = replies;
                response.send(whResponse);
            });
        });
    } else if (a === 'vacationleave') {
        options.path = '/odata/v2/EmpTimeAccountBalance?$filter=userId%20eq%20%2710010%27%20and%20timeAccountType%20eq%20%27US_TA_Vacation%27&$format=json';
        https.get(options, (res) => {
            var result;
            res.on('data', (chunk) => {
                if (result !== undefined) {
                    result += chunk.toString();
                } else {
                    result = chunk.toString();
                }
            });
            res.on('end', () => {
                console.log(result);
                output = JSON.parse(result).d.results[0].balance;
                console.log(output);
                repliesContent.content = "Your Vacation Leave balance is " + output;
                console.log(repliesContent.content);
                replies.push(repliesContent);
                whResponse.replies = replies;
                response.send(whResponse);
            });

            res.on('error', (e) => {
                console.error(e);
                output = e.message;
                repliesContent.content = "Error: " + output;
                replies.push(repliesContent);
                whResponse.replies = replies;
                response.send(whResponse);
            });
        });
    } else if (a === 'totalleave' || a === 'myleaves') {
        options.path = '/odata/v2/EmpTimeAccountBalance?$filter=userId%20eq%20%2710010%27%20and%20timeAccountType%20eq%20%27US_TA_SickLeave%27&$format=json';
        https.get(options, (res) => {
            var result;
            res.on('data', (chunk) => {
                if (result !== undefined) {
                    result += chunk.toString();
                } else {
                    result = chunk.toString();
                }
            });
            res.on('end', () => {
                slBalance = JSON.parse(result).d.results[0].balance;
                console.log(slBalance);
                options.path = '/odata/v2/EmpTimeAccountBalance?$filter=userId%20eq%20%2710010%27%20and%20timeAccountType%20eq%20%27US_TA_Vacation%27&$format=json';
                https.get(options, (res) => {
                    var result;
                    res.on('data', (chunk) => {
                        if (result !== undefined) {
                            result += chunk.toString();
                        } else {
                            result = chunk.toString();
                        }
                    });
                    res.on('end', () => {
                        vlBalance = JSON.parse(result).d.results[0].balance;
                        console.log(vlBalance);
                        output = parseFloat(slBalance) + parseFloat(vlBalance);
                        console.log(output);
                        repliesContent.content = "Your Total Leave balance is " + output;
                        replies.push(repliesContent);
                        whResponse.replies = replies;
                        response.send(whResponse);
                    });

                    res.on('error', (e) => {
                        console.error(e);
                        output = e.message;
                        repliesContent.content = "Error: " + output;
                        replies.push(repliesContent);
                        whResponse.replies = replies;
                        response.send(whResponse);
                    });
                });

            });

            res.on('error', (e) => {
                console.error(e);
                output = e.message;
                repliesContent.content = "Error: " + output;
                replies.push(repliesContent);
                whResponse.replies = replies;
                response.send(whResponse);
            });
        });
    }
    
    function error(response,(e)=>{
        
    })
});

var port = process.env.PORT || 3000;
app.listen(port, function() {
    console.log('SF NodeApp listening on port ' + port);
});


####################################################
payload request

{
  "nlp": {
    "uuid": "6e643ac0-30d7-4dd8-8a06-3eb4a25920e9",
    "intents": [
      {
        "slug": "leave_balance",
        "confidence": 0.99,
        "description": "User Leave Balance"
      }
    ],
    "entities": {
      "pronoun": [
        {
          "person": 1,
          "number": "singular",
          "gender": "unknown",
          "raw": "I",
          "confidence": 0.99
        }
      ],
      "sickleave": [
        {
          "value": "sick",
          "raw": "Sick",
          "confidence": 0.71
        }
      ]
    },
    "language": "en",
    "processing_language": "en",
    "version": "1906.0.2",
    "timestamp": "2019-09-07T09:00:23.446486 00:00",
    "status": 200,
    "source": "I want to know about My total Leave balance",
    "act": "assert",
    "type": null,
    "sentiment": "vnegative"
  },
  "action_id": "cfdcd578-f5cb-4ffd-8e22-115a71867002",
  "qna": {},
  "conversation": {
    "id": "test-1567846181945",
    "conversation_id": "test-1567846181945",
    "warning": "The conversation_id field will be depreciated on January 1st 2018! Switch to using the id field instead",
    "language": "en",
    "memory": {},
    "skill_stack": [
      "leave_balance"
    ],
    "skill": "leave_balance",
    "skill_occurences": 5,
    "participant_data": {}
  }
}

##################################
API Info.
Please find the details for the below scenario.
•	Leave Approved ? – OData to validate leave has been approved or not for Lalitha on specific date ( 20th Sep )

URI : https://api10.successfactors.com/odata/v2/EmployeeTime?$filter=userId eq '10009' and timeType eq 'US_TT_Sick' and startDate eq '2019-05-14'

